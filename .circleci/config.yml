version: 2.0

# heavily inspired by:
# https://raw.githubusercontent.com/pinax/pinax-wiki/6bd2a99ab6f702e300d708532a6d1d9aa638b9f8/.circleci/config.yml

common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - run:
        name: merge pull request base
        command: ./.circleci/merge_pr.sh
    - run:
        name: merge pull request base (2nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - run:
        name: merge pull request base (3nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - restore_cache:
        keys:
          - cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install libsnappy-dev
        command: sudo apt install -y libsnappy-dev
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - save_cache:
        paths:
          - .hypothesis
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - .pytest_cache/v/eth2/bls/key-cache
        key: cache-v1-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

eth2_fixtures: &eth2_fixtures
  working_directory: ~/repo
  steps:
    - checkout
    - run:
        name: merge pull request base
        command: ./.circleci/merge_pr.sh
    - run:
        name: merge pull request base (2nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - run:
        name: merge pull request base (3nd try)
        command: ./.circleci/merge_pr.sh
        when: on_fail
    - restore_cache:
        keys:
          - cache-v3-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}-{{ checksum "./.circleci/get_eth2_fixtures.sh" }}
    - run:
        name: install libsnappy-dev
        command: sudo apt install -y libsnappy-dev
    - run:
        name: download the required yaml files if missing
        command: ./.circleci/get_eth2_fixtures.sh
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - save_cache:
        paths:
          - .hypothesis
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
          - .pytest_cache/v/eth2/bls/key-cache
          - ./eth2-fixtures
        key: cache-v3-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}-{{ checksum "./.circleci/get_eth2_fixtures.sh" }}
jobs:
  py38-lint:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-lint
  py37-lint:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-lint
  py38-eth2-core:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-core
  py38-eth2-utils:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-utils
  py38-eth2-fixtures:
    <<: *eth2_fixtures
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-fixtures
  py38-eth2-integration:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-integration
  py38-eth2-trio:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-trio
  py38-eth2-components:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV: py38-eth2-components

  py37-eth2-core:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-core
  py37-eth2-utils:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-utils
  py37-eth2-fixtures:
    <<: *eth2_fixtures
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-fixtures
  py37-eth2-integration:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-integration
  py37-eth2-components:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-components
  py37-eth2-trio:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV: py37-eth2-trio

  docker-trinity-beacon-image-build-test:
    machine: true
    steps:
      - checkout
      - run: docker build -t ethereum/trinity-beacon:test-build -f ./docker/beacon.Dockerfile .
      - run: docker run ethereum/trinity-beacon:test-build --help

workflows:
  version: 2
  test:
    jobs:
      # These tests are long, so should be started first to optimize for total suite run time
      - py38-eth2-core
      - py37-eth2-core

      - py37-eth2-utils
      - py37-eth2-fixtures
      - py37-eth2-integration
      - py37-eth2-components
      - py37-eth2-trio

      - py38-eth2-utils
      - py38-eth2-fixtures
      - py38-eth2-integration
      - py38-eth2-components
      - py38-eth2-trio

      - py38-lint
      - py37-lint

      - docker-trinity-beacon-image-build-test
